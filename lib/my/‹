/*
** EPITECH PROJECT, 2022
** src/my_put_float.c
** File description:
** funcion which
*/

#include <stdio.h>
#include <unistd.h>
int my_put_nbr(int nbr);
void my_putchar(char c);
int my_putstr(char const *str);
float comp_c(float nf, int nb, float c);
int counterfunction(float num, int d, float nf);
int display_counter(int count, int counter2, int p);

int my_put_float(float nf, int e, int z, int p)
{
    /*Segun cuantos espacios queden al definir la precision
     
     */
    if (!nf) my_putstr("0.0");
    int d = 1; int counter = 0; int c2 = 0; int c1 = 0;
    if (nf < 0) {
        my_putchar('-'); nf = nf * -1;
    }
    int number = (int) nf;
    float c = 1; counter = counterfunction(nf, 1, nf);
    nf = comp_c(nf, 0, 1);
     e = e - (c1 + 1) - 1 - p;
    while (e > 0) {
        if (z == 0) {
            my_putchar(' ');
        } else {
            my_putchar('0');
        }
        e--;
    }
    if (p == 0) {
        my_put_nbr(number);
    } else {
    while ((nf / d) >= 10) {
        d *= 10; c2++;
    }
    }
    c2++; c1 = counter;
   
    
    if (p == 0) {
        p = c1 + 1;
    }
    printf("counter: %i\n",counter);
    if (p != 0) {
    while (d > 0 && p != 0) {
        my_putchar((int)(nf / d) % 10 + '0'); d /= 10;
        if (counter == 0) {
            my_putchar('.');
        }
        if (counter < 0) {
            p--;
        }
        counter--;
    }
    display_counter(c1, c2, p);
    }
    return (c1 + 8);
}

float comp_c(float nf, int nb, float c)
{
    while (c != 0) {
        nf = nf * 10; nb = (int) nf; c = nf - nb;
    }
    return nf;
}

int counterfunction(float num, int d, float nf)
{
    int counter = 0;
    while (num > 1) {
        num = nf / d; d = d * 10; counter++;
    }
    return (counter - 2);
}

int display_counter(int count, int counter2, int p)
{
    if (counter2 > count) {
        counter2 = counter2 - count;
    } else {
        counter2 = count - counter2;
    }
    if (counter2 < 6) {
        counter2 = 6 - counter2;
        while (counter2 >= 0 && p > 0) {
            my_putchar('0'); counter2--; p--;
        }
        
    }
    return 0;
}
